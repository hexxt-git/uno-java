package cards;

import constants.Color;

// Represents numbered cards (0-9) in different colors
// Extends base Card with number property and special matching rules

public class NumberCard extends Card {
    private int number; // The number on the card (0-9)

    public NumberCard(Color color, int number) {
        super(color);
        this.number = number;
    }

    public int getNumber() {
        return number;
    }

    // Overrides base isValidPlay to allow matching numbers
    // regardless of color
    @Override
    public boolean isValidPlay(Card other) {
        if (other == null)
            return true;
        if (this.getColor() == Color.Wild || other.getColor() == Color.Wild)
            return true;
        if (this.getColor() == other.getColor())
            return true;
        if (other instanceof NumberCard) {
            NumberCard otherNumberCard = (NumberCard) other;
            if (this.number == otherNumberCard.number)
                return true;
        }
        return false;
    }

    public String toString() {
        return String.format("%s[%s %s]\033[0m", getColor().consoleColor, getColor(), number);
    }

    @Override // generated by IDE
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (!super.equals(obj))
            return false;
        if (getClass() != obj.getClass())
            return false;
        NumberCard other = (NumberCard) obj;
        if (number != other.number)
            return false;
        return true;
    }

}